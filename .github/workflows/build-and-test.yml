name: .NET Core Build and Test

on:
  pull_request:
    branches: [main, develop]

env:
  DOTNET_VERSION: "5.0.x"

jobs:
  build-and-test:
    name: Build and Test Application
    runs-on: ubuntu-latest
    container:
      image: mcr.microsoft.com/dotnet/sdk:5.0
    strategy:
      matrix:
        test_project: ["TestQTests", "TestQIntegrationTests"]

    steps:
      - name: Checkout GitHub actions
        uses: actions/checkout@v2

      - name: Install dependencies
        run: dotnet restore

      - name: Build
        run: dotnet build --configuration Release --no-restore

      - name: Test
        run: dotnet test --no-restore ${{ matrix.test_project }} /p:CollectCoverage=true /p:CoverletOutputFormat=opencover --logger "trx;LogFileName=${{ matrix.test_project }}.trx" --results-directory "./TestResults-${{ matrix.test_project }}"

      - name: Upload dotnet test results
        uses: actions/upload-artifact@v2
        with:
          name: dotnet-results-${{ matrix.test_project }}
          path: TestResults-${{ matrix.test_project }}
        if: ${{ always() }}

      - name: Upload Opencover results
        uses: actions/upload-artifact@v2
        with:
          name: opencover-results-${{ matrix.test_project }}
          path: ${{ matrix.test_project }}/coverage.opencover.xml
        if: ${{ always() }}

  sonarcloud:
    needs: build-and-test
    name: Sonarcloud analysis
    runs-on: windows-latest
    steps:
      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 1.11
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0 # Shallow clones should be disabled for a better relevancy of analysis
      - name: Cache SonarCloud packages
        uses: actions/cache@v1
        with:
          path: ~\sonar\cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
      - name: Cache SonarCloud scanner
        id: cache-sonar-scanner
        uses: actions/cache@v1
        with:
          path: .\.sonar\scanner
          key: ${{ runner.os }}-sonar-scanner
          restore-keys: ${{ runner.os }}-sonar-scanner
      - name: Install SonarCloud scanner
        if: steps.cache-sonar-scanner.outputs.cache-hit != 'true'
        shell: powershell
        run: |
          New-Item -Path .\.sonar\scanner -ItemType Directory
          dotnet tool update dotnet-sonarscanner --tool-path .\.sonar\scanner

      - name: Download artifacts
        uses: actions/download-artifact@v2
        with:
          path: ./artifacts

      - name: Display structure of downloaded files
        run: ls -R
        working-directory: ./artifacts

      - name: Build and analyze
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        shell: powershell
        run: |
          .\.sonar\scanner\dotnet-sonarscanner begin /k:"TestOrganizationQ_TestRepositoryQ" /o:"testorganizationq" /d:sonar.login="${{ secrets.SONAR_TOKEN }}" /d:sonar.host.url="https://sonarcloud.io" /d:sonar.cs.xunit.reportsPaths=artifacts/dotnet-results-TestQTests/*.trx,artifacts/dotnet-results-TestQIntegrationTests/*.trx /d:sonar.cs.opencover.reportsPaths=artifacts/opencover-results-TestQTests/coverage.opencover.xml,artifacts/opencover-results-TestQIntegrationTests/coverage.opencover.xml
          dotnet restore
          dotnet build --configuration release
          .\.sonar\scanner\dotnet-sonarscanner end /d:sonar.login="${{ secrets.SONAR_TOKEN }}"
